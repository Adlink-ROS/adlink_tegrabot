<launch>
    <!--
    # Copyright 2018 ADLINK Technology, Inc.
    # Developer: me
    #
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    -->

    <!-- ********************* -->    
    <!-- Launch file arguments -->
    <!-- ********************* -->
    <arg name="height_above_ground" default="1.6"/>    <!-- in meters, assumes a horizontally oriented RGB-D sensor; important for accurate detection -->
    <arg name="dummy_transforms"    default="true"/>  <!-- publish TF transform for sensor to groundplane -->
    <arg name="camera_type"         default="Astra_Pro" /> <!-- opt: Astra, Astra_Pro, D435 -->
    <arg name="pure_legs"  	    default="false" />
    
    <arg name="rgb_image"    value="/camera/color/image_raw" if="$(eval camera_type == 'D435')" />
    <arg name="rgb_info"     value="/camera/color/camera_info" if="$(eval camera_type == 'D435')"/>
    <arg name="points_topic" value="/camera/depth/color/points" if="$(eval camera_type == 'D435')"/> 
    <arg name="depth_image"  value="/camera/aligned_depth_to_color/image_rect"  if="$(eval camera_type == 'D435')"/>
    <arg name="depth_info"   value="/camera/aligned_depth_to_color/camera_info" if="$(eval camera_type == 'D435')"/>   

    <arg name="rgb_image"    value="/camera/color/image_rect_color" if="$(eval camera_type == 'Astra' or camera_type == 'Astra_Pro' )"/>
    <arg name="rgb_info"     value="/camera/color/camera_info"      if="$(eval camera_type == 'Astra' or camera_type == 'Astra_Pro' )" />
    <arg name="points_topic" value="/camera/depth_registered/points" if="$(eval camera_type == 'Astra' or camera_type == 'Astra_Pro' )"/> 
    <arg name="depth_image"  value="/camera/depth_registered/sw_registered/image_rect"  if="$(eval camera_type == 'Astra' or camera_type == 'Astra_Pro' )"/>
    <arg name="depth_info"   value="/camera/depth_registered/sw_registered/camera_info" if="$(eval camera_type == 'Astra' or camera_type == 'Astra_Pro' )"/>   

    <!-- Set up dummy transforms into an imaginary robot and odom frame -->
    <group if="$(arg dummy_transforms)">       
        <node name="tf_top2camera" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 top_base_link camera_link 10"/>        
        <node name="tf_base2top"   pkg="tf" type="static_transform_publisher" args="0 0 $(arg height_above_ground) 0 0 0 base_footprint top_base_link 10"/>
        <node name="tf_odom2base"  pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 odom base_footprint 10"/>
    </group>

    <!-- Tensorflow Detectors --> 
    <group unless="$(arg pure_legs)">
    <include file="$(find tensorflow_object_detector)/launch/object_detect.launch"/>
    </group>
</launch>
